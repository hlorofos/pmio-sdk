{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "ProcessMaker API",
        "description": "You can use your favorite\nHTTP/REST library for your programming language to use PMIO API, or\nyou can use one of our SDKs:\nLanguage | GitHub Link | Download Link\n--- | --- | ---\nPHP | [PHP SDK](https://github.com/ProcessMaker/pmio-sdk-php) | [Download PHP SDK](https://github.com/ProcessMaker/pmio-sdk-php/archive/master.zip)\nC# | [C#](https://github.com/ProcessMaker/pmio-sdk-csharp) | [Download C# SDK](https://github.com/ProcessMaker/pmio-sdk-csharp/archive/master.zip)\n\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n# Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Rebilly/ReDoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).\n# OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Rebilly/ReDoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).\n# Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n# Authentication\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\n\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n<!-- ReDoc-Inject: <security-definitions> -->\nThis ProcessMaker I/O API provides<br>\n#Test\n<br>\naccess to a BPMN 2.0 compliant workflow engine api that is designed to be used as a microservice to support enterprise cloud applications.  The current Alpha 1.0 version supports most of the descriptive class of the BPMN 2.0 specification.",
        "termsOfService": "http://processmaker.com/terms/",
        "contact": {
            "name": "ProcessMaker API Team",
            "email": "support@processmaker.io",
            "url": "https://www.processmaker.io/"
        },
        "x-logo": {
            "url": "https://www.processmaker.io/img/logo-black.svg",
            "backgroundColor": "#FFFFFF"
        }
    },
    "host": "CHANGEME.api.processmaker.io",
    "basePath": "/api/v1",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/vnd.api+json"
    ],
    "produces": [
        "application/vnd.api+json"
    ],
    "security": [
        {
            "PasswordGrant": []
        }
    ],
    "tags": [
        {
            "name": "client",
            "description": "Everything about PM.IO"
        },
        {
            "name": "users",
            "description": "Operations about user"
        },
        {
            "name": "groups",
            "description": "Operations about user groups"
        },
        {
            "name": "Pagination",
            "description": "Pagination description (can use markdown syntax)",
            "x-traitTag": true
        }
    ],
    "x-tagGroups": [
        {
            "name": "User Management",
            "tags": [
                "users",
                "groups"
            ]
        },
        {
            "name": "Pagination",
            "tags": [
                "pagination"
            ]
        }
    ],
    "paths": {
        "/users/{user_id}/clients": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves all existing Oauth clients belonging to an user.",
                "operationId": "findOauthClients",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID related to the Oauth clients",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Oauth clients retrieved",
                        "schema": {
                            "title": "OauthClientCollection",
                            "description": "JSON API response with a collection of the Oauth clients in an array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OauthClient"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method creates a new Oauth client for the user",
                "operationId": "addOauthClient",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user related to the Oauth client",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "OauthClientCreateItem",
                        "in": "body",
                        "description": "JSON API with the Oauth Client object to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/OauthClient"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The Oauth client was created",
                        "schema": {
                            "type": "object",
                            "title": "OauthClientItem",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/OauthClient"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/clients/{client_id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method is retrieves an Oauth client based on its ID.",
                "operationId": "findOauthClientById",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of user to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "description": "ID of Oauth client to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Oauth Client retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/OauthClient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client"
                ],
                "description": "This method updates an existing Oauth client.",
                "operationId": "updateOauthClient",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of user to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "description": "ID of Oauth client to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "OauthClientUpdateItem",
                        "in": "body",
                        "description": "Oauth Client object to edit",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/OauthClient"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Oauth Client updated",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/OauthClient"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "description": "This method deletes an Oauth client using the Oauth client and user IDs.",
                "operationId": "deleteOauthClient",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "description": "ID of Oauth client to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item was successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Deletion error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/tasks/{task_id}/inputoutput": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves all existing Input/Output objects in the related task instance.",
                "operationId": "findInputOutputs",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID related to Input/Output object",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "Task instance ID related to Input/Output object",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Input/Outputs retrieved",
                        "schema": {
                            "title": "InputOutputCollection",
                            "description": "JSON API response with a collection of the input/outputs in the array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InputOutput"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method creates a new Input/Output object",
                "operationId": "addInputOutput",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID related to Input/Output object",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "Task instance ID related to Input/Output object",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InputOutputCreateItem",
                        "in": "body",
                        "description": "Create and add a new Input/Output object with JSON API",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/InputOutput"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The InputOutput object was created",
                        "schema": {
                            "type": "object",
                            "title": "InputOutputItem",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/InputOutput"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/tasks/{task_id}/inputoutput/{inputoutput_uid}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves an Input/Output object using its ID.",
                "operationId": "findInputOutputById",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID related to the Input/Output object",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "Task instance ID related to the Input/Output object",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "inputoutput_uid",
                        "in": "path",
                        "description": "ID of Input/Output to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Input/Output object retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/InputOutput"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client"
                ],
                "description": "This method updates an existing Input/Output object.",
                "operationId": "updateInputOutput",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID related to the Input/Output object",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "Task instance ID related to the Input/Output object",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "inputoutput_uid",
                        "in": "path",
                        "description": "ID of Input/Output to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InputOutputUpdateItem",
                        "in": "body",
                        "description": "Input/Output object to edit",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/InputOutput"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Input/Output object updated",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/InputOutput"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "description": "This method deletes the Input/Output based on the Input/Output ID, process ID and task ID.",
                "operationId": "deleteInputOutput",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID related to the Input/Output object",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "Task instance ID related to Input/Output object",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "inputoutput_uid",
                        "in": "path",
                        "description": "Input/Output ID to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Deletion error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/import": {
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method imports BPMN files. A new process is created when import is successful.",
                "operationId": "importBpmnFile",
                "parameters": [
                    {
                        "name": "bpmnImportItem",
                        "in": "body",
                        "description": "JSON API with the BPMN file to import",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/BpmnFile"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "File imported and process instance created successfully",
                        "schema": {
                            "type": "object",
                            "title": "ProcessCollection",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Process"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/MetaLog"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/instances/{instance_id}/datamodel": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method returns the instance DataModel and lets the user work with it directly",
                "operationId": "findDataModel",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process to return",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance_id",
                        "in": "path",
                        "description": "ID of instance to return",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DataModel retrived",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/DataModelItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/task_instances/{task_instance_id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves a task instance based on its ID.",
                "operationId": "findTaskInstanceById",
                "parameters": [
                    {
                        "name": "task_instance_id",
                        "in": "path",
                        "description": "ID of task instance to return",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task Instance retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/TaskInstance"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "client"
                ],
                "description": "This method updates an existing task instance.",
                "operationId": "updateTaskInstance",
                "parameters": [
                    {
                        "name": "task_instance_id",
                        "in": "path",
                        "description": "ID of task instance to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TaskInstanceUpdateItem",
                        "in": "body",
                        "description": "Task Instance object to update",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/TaskInstance"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task instance updated",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/TaskInstance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/task_instances": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves all existing task instances",
                "operationId": "findTaskInstances",
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of task instances retrieved",
                        "schema": {
                            "title": "TaskInstanceCollection",
                            "description": "JSON API response with the collection of task instances in an  array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskInstance"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/instances": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves related to the process using  the Process ID",
                "operationId": "findInstances",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID related to the instances",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of instances retrieved",
                        "schema": {
                            "title": "InstanceCollection",
                            "description": "JSON API response with a collection of the instances in an array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Instance"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method creates a new instance.",
                "operationId": "addInstance",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID related to the nstance",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InstanceCreateItem",
                        "in": "body",
                        "description": "JSON API response with the Instance object to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Instance"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Instance created",
                        "schema": {
                            "type": "object",
                            "title": "InstanceItem",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Instance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/instances/{instance_id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves an instance using its ID.",
                "operationId": "findInstanceById",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process to return",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance_id",
                        "in": "path",
                        "description": "ID of instance to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Instance retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Instance"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client"
                ],
                "description": "This method updates  an existing instance.",
                "operationId": "updateInstance",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance_id",
                        "in": "path",
                        "description": "ID of Instance to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InstanceUpdateItem",
                        "in": "body",
                        "description": "Instance object to edit",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Instance"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Instance updated",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Instance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "description": "This method deletes an instance using the instance ID and process ID.",
                "operationId": "deleteInstance",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance_id",
                        "in": "path",
                        "description": "ID of instance to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Instance successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Deletion error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/flows": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves all existing flows.",
                "operationId": "findFlows",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process related to the flow",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of flows retrieved",
                        "schema": {
                            "title": "FlowCollection",
                            "description": "JSON API response with a collection of the flow in an array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Flow"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method creates a new Sequence flow",
                "operationId": "addFlow",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of the process related to the flow",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "FlowCreateItem",
                        "in": "body",
                        "description": "JSON API response with the Flow object to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Flow"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The Sequence Flow was created",
                        "schema": {
                            "type": "object",
                            "title": "FlowItem",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Flow"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/flows/{flow_id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves a flow based on its ID.",
                "operationId": "findFlowById",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process to return",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "flow_id",
                        "in": "path",
                        "description": "ID of flow to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flow retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Flow"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client"
                ],
                "description": "This method updates an existing flow.",
                "operationId": "updateFlow",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "flow_id",
                        "in": "path",
                        "description": "ID of flow to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "FlowUpdateItem",
                        "in": "body",
                        "description": "Flow object to edit",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Flow"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flow updated",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Flow"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "description": "This method deletes a sequence flow using the flow ID and process ID.",
                "operationId": "deleteFlow",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "flow_id",
                        "in": "path",
                        "description": "ID of flow to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Deletion error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/gateways": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves all existing gateways.",
                "operationId": "findGateways",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process related to the gateway",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gateways list",
                        "schema": {
                            "title": "GatewayCollection",
                            "description": "JSON API Response with collection of Items in array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Gateway"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method creates a new gateway.",
                "operationId": "addGateway",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of the process related to the gateway",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "GatewayCreateItem",
                        "in": "body",
                        "description": "JSON API response with the gateway object to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Gateway"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Gateway created",
                        "schema": {
                            "type": "object",
                            "title": "GatewayItem",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Gateway"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/gateways/{gateway_id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves a gateway based on its ID.",
                "operationId": "findGatewayById",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process to return",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gateway_id",
                        "in": "path",
                        "description": "ID of gateway to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gateway retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Gateway"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client"
                ],
                "description": "This method updates an existing gateway.",
                "operationId": "updateGateway",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gateway_id",
                        "in": "path",
                        "description": "ID of gateway to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "GatewayUpdateItem",
                        "in": "body",
                        "description": "Gateway object to edit",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Gateway"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gateway updated",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Gateway"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "description": "This method is deletes a single item using the gateway ID and process ID.",
                "operationId": "deleteGateway",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gateway_id",
                        "in": "path",
                        "description": "ID of Process to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Deletion error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/events": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method returns all events related to the runned process",
                "operationId": "findEvents",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process related to the event",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events retrieved",
                        "schema": {
                            "title": "EventCollection",
                            "description": "JSON API response with a collection of the events in an array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Event"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method creates the new event.",
                "operationId": "addEvent",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of the process related to the event",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "EventCreateItem",
                        "in": "body",
                        "description": "JSON API response with the Event object to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Event"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event response",
                        "schema": {
                            "type": "object",
                            "title": "EventItem",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Event"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/events/{event_id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves an event using its ID.",
                "operationId": "findEventById",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process to return",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of event to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Event"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client"
                ],
                "description": "This method updates an existing event",
                "operationId": "updateEvent",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of event to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "EventUpdateItem",
                        "in": "body",
                        "description": "Event object to edit",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Event"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event updated",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Event"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "description": "This method deletes an event using the event ID and process ID",
                "operationId": "deleteEvent",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of event to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Deletion error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/events/{event_id}/trigger": {
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method starts/triggers an event.",
                "operationId": "EventTrigger",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID related to the event",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of event to trigger",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TriggerEventCreateItem",
                        "in": "body",
                        "description": "Json with some parameters",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/DataModel"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event started",
                        "schema": {
                            "type": "object",
                            "title": "DataModelItem",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/DataModelItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/events/{event_id}/connectors": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method returns all Event connectors related to the run Process and Event.",
                "operationId": "findEventConnectors",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of Task to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event connectors list",
                        "schema": {
                            "title": "EventConnectorsCollection",
                            "description": "JSON API Response with collection of Items in array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventConnector"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method is intended for creating a new Event connector.",
                "operationId": "addEventConnector",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of Event to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "EventConnectorCreateItem",
                        "in": "body",
                        "description": "JSON API with the EventConnector object to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/EventConnector"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created Event connector response",
                        "schema": {
                            "type": "object",
                            "title": "EventConnector",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/EventConnector"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/events/{event_id}/connectors/{connector_id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method returns all Event connectors related to the run Process and Event.",
                "operationId": "findEventConnectorById",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of Event to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connector_id",
                        "in": "path",
                        "description": "ID of EventConnector to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event Connector Item response",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/EventConnector"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client"
                ],
                "description": "This method lets update the existing Event connector with new parameters values",
                "operationId": "updateEventConnector",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of Event to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connector_id",
                        "in": "path",
                        "description": "ID of Event Connector to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "EventConnectorUpdateItem",
                        "in": "body",
                        "description": "EventConnector object to edit",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/EventConnector"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON API response with updated EventConnector object",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/EventConnector"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "description": "This method is intended for deleting a single Event connector based on Event ID, Process ID and Connector ID.",
                "operationId": "deleteEventConnector",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of of Process item",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of item to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connector_id",
                        "in": "path",
                        "description": "ID of EventConnector to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Deletion error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/tasks": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method is intended for returning a list of all Tasks related to the process",
                "operationId": "findTasks",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process relative to task",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks list",
                        "schema": {
                            "title": "TaskCollection",
                            "description": "JSON API Response with collection of Items in array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Task"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method creates a new task.",
                "operationId": "addTask",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID related to the task",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TaskCreateItem",
                        "in": "body",
                        "description": "JSON API with the Task object to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Task"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Task created",
                        "schema": {
                            "type": "object",
                            "title": "TaskItem",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/tasks/{task_id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method is retrieves a task using its ID.",
                "operationId": "findTaskById",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of process to return",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "ID of task to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client"
                ],
                "description": "This method is intended for updating an existing task.",
                "operationId": "updateTask",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "ID of Task to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TaskUpdateItem",
                        "in": "body",
                        "description": "Task object to edit",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Task"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON API response with updated Task object",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "description": "This method deletes a task using the task ID and process ID.",
                "operationId": "deleteTask",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "ID of task to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Deletion error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/tasks/{task_id}/connectors": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method returns all Task connectors related to the run Process and Task.",
                "operationId": "findTaskConnectors",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "ID of Task to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task connectors list",
                        "schema": {
                            "title": "TaskConnectorsCollection",
                            "description": "JSON API Response with collection of Items in array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskConnector"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method is intended for creating a new task connector.",
                "operationId": "addTaskConnector",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "ID of Task to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TaskConnectorCreateItem",
                        "in": "body",
                        "description": "JSON API with the TaskConnector object to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/TaskConnector"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created Task connector response",
                        "schema": {
                            "type": "object",
                            "title": "TaskConnector",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/TaskConnector"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/tasks/{task_id}/connectors/{connector_id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method is intended for retrieving an Task connector based on it's ID.",
                "operationId": "findTaskConnectorById",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "ID of Task to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connector_id",
                        "in": "path",
                        "description": "ID of TaskConnector to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task Connector Item response",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/TaskConnector"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client"
                ],
                "description": "This method lets update the existing Task connector with new parameters values",
                "operationId": "updateTaskConnector",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "ID of Task to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connector_id",
                        "in": "path",
                        "description": "ID of Task Connector to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TaskConnectorUpdateItem",
                        "in": "body",
                        "description": "TaskConnector object to edit",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/TaskConnector"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON API response with updated TaskConnector object",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/TaskConnector"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "description": "This method is intended for deleting a single Task connector based on Task ID, Process ID and Connector ID.",
                "operationId": "deleteTaskConnector",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "ID of Process item to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "ID of Task item to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "connector_id",
                        "in": "path",
                        "description": "ID of TaskConnector to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Deletion error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{process_id}/tasks/{task_id}/groups": {
            "put": {
                "tags": [
                    "client"
                ],
                "description": "This method assigns group(s) to the choosen task",
                "operationId": "addGroupsToTask",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "ID of task to be modified",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TaskAddGroupsItem",
                        "in": "body",
                        "description": "JSON API with Groups ID's to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/GroupIds"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group(s) was assigned to the task",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Group(s) not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Unknown error while adding Group(s) to the task",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "description": "This method removes groups from a task",
                "operationId": "removeGroupsFromTask",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TaskRemoveGroupsItem",
                        "in": "body",
                        "description": "JSON API response with Groups IDs to remove",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/GroupIds"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Groups removed from task",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Group(s) not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Error removing group(s)",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method synchronizes a one or more groups with a task.",
                "operationId": "syncGroupsToTask",
                "parameters": [
                    {
                        "name": "process_id",
                        "in": "path",
                        "description": "Process ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "ID of task to modify",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TaskSyncGroupsItem",
                        "in": "body",
                        "description": "JSON API response with groups IDs to sync",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/GroupIds"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON API response with result details",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Group(s) not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Error syncing Group(s)",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves all existing processes.",
                "operationId": "findProcesses",
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of processes retrieved",
                        "schema": {
                            "title": "ProcessCollection",
                            "description": "JSON API response with a collection of the processes in an array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Process"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "This method creates a new process",
                "operationId": "addProcess",
                "parameters": [
                    {
                        "name": "ProcessCreateItem",
                        "in": "body",
                        "description": "JSON API response with the Process object to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Process"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "New process created",
                        "schema": {
                            "type": "object",
                            "title": "ProcessItem",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Process"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/processes/{id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "This method retrieves a process using its ID",
                "operationId": "findProcessById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of process to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Process"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client"
                ],
                "description": "This method updates an existing process.",
                "operationId": "updateProcess",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of process to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ProcessUpdateItem",
                        "in": "body",
                        "description": "Process object to edit",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Process"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process updated",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Process"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client"
                ],
                "description": "This method deletes a process using the process ID.",
                "operationId": "deleteProcess",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Process ID to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Deletion error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "tags": [
                    "client",
                    "groups"
                ],
                "description": "This method retrieves all existing groups.",
                "operationId": "findGroups",
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of groups retrived",
                        "schema": {
                            "title": "GroupCollection",
                            "description": "JSON API response with a collection of the groups in an array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Group"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client",
                    "groups"
                ],
                "description": "This method creates a new group.",
                "operationId": "addGroup",
                "parameters": [
                    {
                        "name": "GroupCreateItem",
                        "in": "body",
                        "description": "JSON API with the Group object to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Group"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group created",
                        "schema": {
                            "type": "object",
                            "title": "GroupItem",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Group"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/groups/{id}": {
            "get": {
                "tags": [
                    "client",
                    "groups"
                ],
                "description": "This method retrieves a group using its ID.",
                "operationId": "findGroupById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of group to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Group"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client",
                    "groups"
                ],
                "description": "This method updates an existing group.",
                "operationId": "updateGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of group to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "GroupUpdateItem",
                        "in": "body",
                        "description": "Group object to edit",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Group"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group updated",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Group"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client",
                    "groups"
                ],
                "description": "This method deletes a group using the group ID",
                "operationId": "deleteGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of group to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Deletion error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/groups/{id}/users": {
            "put": {
                "tags": [
                    "client",
                    "groups"
                ],
                "description": "This method adds one or more new users to a group.",
                "operationId": "addUsersToGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of group to be modified",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "GroupAddUsersItem",
                        "in": "body",
                        "description": "JSON API response with array of users ID's",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/UserIds"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON API result details",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Error adding group(s)",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client",
                    "groups"
                ],
                "description": "This method removes one or more users from a group.",
                "operationId": "removeUsersFromGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of group to be modified",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "GroupRemoveUsersItem",
                        "in": "body",
                        "description": "JSON API response with Users IDs to remove",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/UserIds"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User(s) removed from group",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "Error adding group(s)",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client",
                    "groups"
                ],
                "description": "This method synchronizes one or more users with a group.",
                "operationId": "syncUsersToGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of group to be modifieded",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "GroupSyncUsersItem",
                        "in": "body",
                        "description": "JSON API with array of users IDs to sync",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/UserIds"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User(s) synced to group",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "500": {
                        "description": "Error adding group(s)",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/users/myself": {
            "get": {
                "tags": [
                    "client",
                    "users"
                ],
                "description": "This method returns user information using a token",
                "operationId": "myselfUser",
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "client",
                    "users"
                ],
                "description": "This method returns all existing users in the system.",
                "operationId": "findUsers",
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users retrieved",
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "title": "UserCollection",
                            "description": "JSON API response with the collection of users in an array",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/Meta"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "client",
                    "users"
                ],
                "description": "This method creates a new user in the system.",
                "operationId": "addUser",
                "parameters": [
                    {
                        "name": "UserCreateItem",
                        "in": "body",
                        "description": "JSON API with the User object to add",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New user created",
                        "schema": {
                            "type": "object",
                            "title": "UserItem",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "client",
                    "users"
                ],
                "description": "This method returns a user using its ID.",
                "operationId": "findUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "client",
                    "users"
                ],
                "description": "This method updates an existing user.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "UserUpdateItem",
                        "in": "body",
                        "description": "User object for update",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "title": "UserUpdatedItem",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "client",
                    "users"
                ],
                "description": "This method deletes a user from the system.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User was successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/ResultSuccess"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "500": {
                        "description": "The server encountered an unexpected condition when deleting the user",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorArray"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "PasswordGrant": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "/oauth/access_token",
            "authorizationUrl": "/oauth/access_token",
            "description": "*TODO:* Oauth2 token description goes here"
        }
    },
    "definitions": {
        "TaskConnector": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "task_connector",
                    "type": "string",
                    "example": "task_connector"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "task_id": {
                            "type": "integer"
                        },
                        "connector_class": {
                            "type": "string",
                            "default": "HttpConnector"
                        },
                        "input_parameters": {
                            "type": "string",
                            "default": "[]"
                        },
                        "output_parameters": {
                            "type": "string",
                            "default": "[]"
                        },
                        "async_before": {
                            "type": "boolean"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "EventConnector": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "event_connector",
                    "type": "string",
                    "example": "event_connector"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "event_id": {
                            "type": "integer"
                        },
                        "connector_class": {
                            "type": "string",
                            "default": "CorrelationKeys"
                        },
                        "input_parameters": {
                            "type": "string",
                            "default": "[]"
                        },
                        "output_parameters": {
                            "type": "string",
                            "default": "[]"
                        },
                        "async_before": {
                            "type": "boolean"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "OauthClient": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": "1"
                },
                "type": {
                    "default": "client",
                    "type": "string",
                    "example": "client"
                },
                "attributes": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "secret": {
                            "type": "string",
                            "example": "1WfPZS8TepSKgnure5FHUOyvT8340fQH8cz4ISN2"
                        },
                        "name": {
                            "type": "string",
                            "example": "Oauth Client Name"
                        },
                        "personal_access_client": {
                            "type": "boolean"
                        },
                        "password_client": {
                            "type": "boolean"
                        },
                        "revoked": {
                            "type": "boolean"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "InputOutput": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "input_output",
                    "type": "string",
                    "example": "input_output"
                },
                "attributes": {
                    "required": [
                        "input_parameters",
                        "output_parameters"
                    ],
                    "type": "object",
                    "properties": {
                        "input_parameters": {
                            "type": "object"
                        },
                        "output_parameters": {
                            "type": "object"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "BpmnFile": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "default": "process",
                    "type": "string",
                    "example": "process"
                },
                "attributes": {
                    "required": [
                        "bpmn"
                    ],
                    "type": "object",
                    "properties": {
                        "bpmn": {
                            "type": "string",
                            "example": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>...</xml>"
                        }
                    }
                }
            }
        },
        "TaskInstance": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "task_instance",
                    "type": "string",
                    "example": "task_instance"
                },
                "attributes": {
                    "required": [
                        "task_id",
                        "instance_id",
                        "status",
                        "priority"
                    ],
                    "type": "object",
                    "properties": {
                        "task_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "instance_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "group_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "user_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "status": {
                            "type": "string",
                            "default": "INITIAL",
                            "enum": [
                                "INITIAL",
                                "DELEGATED",
                                "STARTED",
                                "CANCELLED",
                                "FINISHED",
                                "COMPLETE",
                                "PAUSED"
                            ]
                        },
                        "priority": {
                            "type": "string",
                            "default": "3",
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5"
                            ]
                        },
                        "delegate_date": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "start_date": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "finish_date": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "task_due_date": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "risk_date": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "duration": {
                            "type": "integer"
                        },
                        "instance_overdue_percentage": {
                            "type": "number",
                            "format": "double"
                        },
                        "data": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "DataModelItem": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "data_model",
                    "type": "string",
                    "example": "data_model"
                },
                "attributes": {
                    "required": [
                        "content"
                    ],
                    "type": "object",
                    "properties": {
                        "content": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "DataModel": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "default": "data_model",
                    "type": "string",
                    "example": "data_model"
                },
                "attributes": {
                    "required": [
                        "content"
                    ],
                    "type": "object",
                    "properties": {
                        "content": {
                            "type": "string",
                            "example": "Some parameters in json format"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "Instance": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "instance",
                    "type": "string",
                    "example": "instance"
                },
                "attributes": {
                    "required": [
                        "name",
                        "process_id",
                        "status"
                    ],
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Instance Name"
                        },
                        "description": {
                            "type": "string",
                            "example": "Some description"
                        },
                        "process_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "parent_instance_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b12"
                        },
                        "init_user_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b14"
                        },
                        "pin": {
                            "type": "string"
                        },
                        "duration": {
                            "type": "integer"
                        },
                        "status": {
                            "type": "string",
                            "default": "RUNNING",
                            "enum": [
                                "RUNNING",
                                "TODO",
                                "PAUSED",
                                "COMPLETED",
                                "CANCELLED"
                            ]
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "Flow": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "flow",
                    "type": "string",
                    "example": "flow"
                },
                "attributes": {
                    "required": [
                        "process_id",
                        "from_object_id",
                        "from_object_type",
                        "to_object_id",
                        "to_object_type",
                        "type",
                        "default",
                        "optional"
                    ],
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Flow name"
                        },
                        "description": {
                            "type": "string",
                            "example": "Some description"
                        },
                        "process_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "from_object_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b25"
                        },
                        "from_object_type": {
                            "type": "string",
                            "example": "task"
                        },
                        "to_object_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b25"
                        },
                        "to_object_type": {
                            "type": "string",
                            "example": "event"
                        },
                        "type": {
                            "type": "string",
                            "default": "SEQUENTIAL",
                            "enum": [
                                "SEQUENTIAL",
                                "EVALUATE",
                                "SELECT",
                                "PARALLEL",
                                "PARALLEL-BY-EVALUATION",
                                "SEC-JOIN",
                                "DISCRIMINATOR"
                            ]
                        },
                        "condition": {
                            "type": "string"
                        },
                        "default": {
                            "type": "boolean",
                            "default": false
                        },
                        "optional": {
                            "type": "boolean",
                            "default": false
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "Gateway": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "gateway",
                    "type": "string",
                    "example": "gateway"
                },
                "attributes": {
                    "required": [
                        "type",
                        "process_id"
                    ],
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Gateway Title"
                        },
                        "description": {
                            "type": "string",
                            "example": "Some description"
                        },
                        "process_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "EXCLUSIVE",
                                "INCLUSIVE",
                                "PARALLEL",
                                "EVENT"
                            ]
                        },
                        "direction": {
                            "type": "string",
                            "enum": [
                                "DIVERGENT",
                                "CONVERGENT",
                                "MIXED"
                            ]
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "Event": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "event",
                    "type": "string",
                    "example": "event"
                },
                "attributes": {
                    "required": [
                        "name",
                        "process_id",
                        "type",
                        "definition"
                    ],
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Event_Title"
                        },
                        "description": {
                            "type": "string",
                            "example": "Some description"
                        },
                        "process_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "message_id": {
                            "type": "integer"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "START",
                                "END",
                                "INTERMEDIATE_CATCH",
                                "INTERMEDIATE_THROW",
                                "BOUNDARY",
                                "IMPLICIT_THROW"
                            ]
                        },
                        "definition": {
                            "type": "string",
                            "enum": [
                                "NONE",
                                "CANCEL",
                                "COMPENSATION",
                                "ERROR",
                                "ESCALATION",
                                "MESSAGE",
                                "LINK",
                                "SIGNAL",
                                "TERMINATE",
                                "TIMER"
                            ]
                        },
                        "interrupting": {
                            "type": "boolean"
                        },
                        "condition": {
                            "type": "string"
                        },
                        "time": {
                            "type": "string"
                        },
                        "duration": {
                            "type": "string"
                        },
                        "cycle": {
                            "type": "string"
                        },
                        "attached_to_task_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "Task": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "task",
                    "type": "string",
                    "example": "task"
                },
                "attributes": {
                    "required": [
                        "type",
                        "process_id",
                        "assign_type",
                        "transfer_fly",
                        "can_upload",
                        "view_upload",
                        "view_additional_documentation",
                        "start",
                        "send_last_email",
                        "selfservice_timeout",
                        "name"
                    ],
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Task_Title"
                        },
                        "description": {
                            "type": "string",
                            "example": "Some description"
                        },
                        "process_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "type": {
                            "default": "NORMAL",
                            "type": "string",
                            "enum": [
                                "NORMAL",
                                "ADHOC",
                                "SUBPROCESS",
                                "HIDDEN",
                                "GATEWAYTOGATEWAY",
                                "WEBENTRYEVENT",
                                "END-MESSAGE-EVENT",
                                "START-MESSAGE-EVENT",
                                "INTERMEDIATE-THROW-MESSAGE-EVENT",
                                "INTERMEDIATE-CATCH-MESSAGE-EVENT",
                                "SCRIPT-TASK",
                                "SERVICE-TASK",
                                "USER-TASK",
                                "START-TIMER-EVENT",
                                "INTERMEDIATE-CATCH-TIMER-EVENT",
                                "END-EMAIL-EVENT",
                                "INTERMEDIATE-THROW-EMAIL-EVENT"
                            ]
                        },
                        "assign_type": {
                            "default": "CYCLIC",
                            "type": "string",
                            "enum": [
                                "CYCLIC",
                                "MANUAL",
                                "EVALUATE",
                                "REPORT_TO",
                                "SELF_SERVICE",
                                "STATIC_MI",
                                "CANCEL_MI",
                                "MULTIPLE_INSTANCE",
                                "MULTIPLE_INSTANCE_VALUE_BASED"
                            ]
                        },
                        "priority_variable": {
                            "type": "string"
                        },
                        "assign_variable": {
                            "type": "string"
                        },
                        "group_variable": {
                            "type": "string"
                        },
                        "mi_instance_variable": {
                            "type": "string"
                        },
                        "mi_complete_variable": {
                            "type": "string"
                        },
                        "transfer_fly": {
                            "default": false,
                            "type": "boolean"
                        },
                        "can_upload": {
                            "default": false,
                            "type": "boolean"
                        },
                        "view_upload": {
                            "default": false,
                            "type": "boolean"
                        },
                        "view_additional_documentation": {
                            "default": false,
                            "type": "boolean"
                        },
                        "start": {
                            "default": false,
                            "type": "boolean"
                        },
                        "send_last_email": {
                            "default": true,
                            "type": "boolean"
                        },
                        "derivation_screen_tpl": {
                            "type": "string"
                        },
                        "selfservice_timeout": {
                            "type": "integer",
                            "default": 0
                        },
                        "selfservice_time": {
                            "type": "string"
                        },
                        "selfservice_time_unit": {
                            "type": "string"
                        },
                        "selfservice_execution": {
                            "type": "string"
                        },
                        "last_assigned_user_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "script": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "Process": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "process",
                    "type": "string",
                    "example": "process"
                },
                "attributes": {
                    "required": [
                        "status",
                        "duration_by",
                        "type",
                        "design_access",
                        "name"
                    ],
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Process_Title"
                        },
                        "description": {
                            "type": "string",
                            "example": "Some description"
                        },
                        "parent_process_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
                        },
                        "status": {
                            "default": "ACTIVE",
                            "type": "string",
                            "enum": [
                                "ACTIVE",
                                "INACTIVE",
                                "DISABLED"
                            ]
                        },
                        "duration_by": {
                            "default": "WORKING_DAYS",
                            "type": "string",
                            "enum": [
                                "WORKING_DAYS",
                                "CALENDAR_DAYS"
                            ]
                        },
                        "type": {
                            "default": "NORMAL",
                            "type": "string",
                            "enum": [
                                "NORMAL",
                                "SUB_PROCESS"
                            ]
                        },
                        "assignment": {
                            "default": false,
                            "type": "boolean"
                        },
                        "design_access": {
                            "default": "PUBLIC",
                            "type": "string",
                            "enum": [
                                "PUBLIC",
                                "PRIVATE"
                            ]
                        },
                        "show_map": {
                            "default": true,
                            "type": "boolean"
                        },
                        "show_message": {
                            "default": true,
                            "type": "boolean"
                        },
                        "show_delegate": {
                            "default": true,
                            "type": "boolean"
                        },
                        "show_dynaform": {
                            "default": false,
                            "type": "boolean"
                        },
                        "category_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b22"
                        },
                        "sub_category_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b33"
                        },
                        "create_user_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b44"
                        },
                        "debug": {
                            "type": "boolean",
                            "default": false
                        },
                        "dynaform_summary_id": {
                            "type": "string",
                            "example": "9d705617-cc29-482a-85ff-7f7292f72b55"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "Group": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "group",
                    "type": "string",
                    "example": "group"
                },
                "attributes": {
                    "required": [
                        "code",
                        "title"
                    ],
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string",
                            "example": "GROUP_ADMIN"
                        },
                        "title": {
                            "type": "string",
                            "example": "Group_Title"
                        },
                        "description": {
                            "type": "string",
                            "example": "Some description"
                        },
                        "status": {
                            "default": "ACTIVE",
                            "type": "string",
                            "enum": [
                                "ACTIVE",
                                "INACTIVE"
                            ],
                            "example": "ACTIVE"
                        },
                        "users": {
                            "type": "array",
                            "description": "User ID's array",
                            "items": {
                                "type": "string",
                                "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                            }
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        }
                    }
                }
            }
        },
        "UserIds": {
            "type": "object",
            "required": [
                "users"
            ],
            "properties": {
                "users": {
                    "type": "array",
                    "description": "User ID's array",
                    "items": {
                        "type": "string",
                        "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                    }
                }
            }
        },
        "GroupIds": {
            "type": "object",
            "required": [
                "groups"
            ],
            "properties": {
                "groups": {
                    "type": "array",
                    "description": "Group ID's array",
                    "items": {
                        "type": "string",
                        "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                    }
                }
            }
        },
        "ResultSuccess": {
            "type": "object",
            "required": [
                "meta"
            ],
            "properties": {
                "meta": {
                    "type": "object",
                    "required": [
                        "code"
                    ],
                    "properties": {
                        "code": {
                            "type": "string",
                            "example": "1234",
                            "description": "Result code from ApiCodes dictionary"
                        },
                        "title": {
                            "type": "string",
                            "example": "Some positive result description",
                            "description": "Result textual explanation"
                        }
                    }
                }
            }
        },
        "User": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
                },
                "type": {
                    "default": "user",
                    "type": "string",
                    "example": "user"
                },
                "attributes": {
                    "required": [
                        "username",
                        "password",
                        "email",
                        "firstname",
                        "lastname"
                    ],
                    "type": "object",
                    "properties": {
                        "username": {
                            "type": "string",
                            "example": "user_name"
                        },
                        "password": {
                            "type": "string",
                            "example": "some_password"
                        },
                        "firstname": {
                            "type": "string",
                            "example": "First_name"
                        },
                        "lastname": {
                            "type": "string",
                            "example": "Last_name"
                        },
                        "email": {
                            "type": "string",
                            "example": "example@example.com"
                        },
                        "expires_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "status": {
                            "default": "ACTIVE",
                            "type": "string",
                            "enum": [
                                "ACTIVE",
                                "INACTIVE",
                                "VACATION",
                                "CLOSED"
                            ],
                            "example": "ACTIVE"
                        },
                        "country": {
                            "type": "string",
                            "example": "USA"
                        },
                        "city": {
                            "type": "string",
                            "example": "Washington"
                        },
                        "location": {
                            "type": "string",
                            "example": "Location"
                        },
                        "address": {
                            "type": "string",
                            "example": "USA"
                        },
                        "phone": {
                            "type": "string",
                            "example": "+1(99)999-99-99"
                        },
                        "fax": {
                            "type": "string",
                            "example": "+1(99)999-99-99"
                        },
                        "cellular": {
                            "type": "string",
                            "example": "+1(99)999-99-99"
                        },
                        "zip_code": {
                            "type": "string"
                        },
                        "position": {
                            "type": "string"
                        },
                        "resume": {
                            "type": "string"
                        },
                        "birthday_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "bookmark_start_cases": {
                            "type": "string"
                        },
                        "time_zone": {
                            "type": "string"
                        },
                        "default_lang": {
                            "type": "string",
                            "default": "en_US"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "updated_at": {
                            "type": "string",
                            "example": "2017-01-01T00:00:00+00:00"
                        },
                        "clients": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "Pagination": {
            "type": "object",
            "required": [
                "total",
                "count",
                "per_page",
                "current_page",
                "total_pages",
                "links"
            ],
            "properties": {
                "total": {
                    "type": "integer",
                    "example": 125
                },
                "count": {
                    "type": "integer",
                    "example": 25
                },
                "per_page": {
                    "type": "integer",
                    "example": 25
                },
                "current_page": {
                    "type": "integer",
                    "example": 2
                },
                "total_pages": {
                    "type": "integer",
                    "example": 30
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "next": {
                            "type": "string",
                            "example": "http://localhost/api/v1/groups?page=3"
                        },
                        "previous": {
                            "type": "string",
                            "example": "http://localhost/api/v1/groups?page=1"
                        }
                    }
                }
            }
        },
        "MetaLog": {
            "type": "object",
            "required": [
                "import_log"
            ],
            "properties": {
                "import_log": {
                    "type": "string"
                }
            }
        },
        "Meta": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            }
        },
        "errorArray": {
            "type": "object",
            "required": [
                "errors"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                }
            }
        },
        "Error": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "parameters": {
        "page": {
            "name": "page",
            "in": "query",
            "description": "Page number to fetch",
            "required": false,
            "default": 1,
            "minimum": 1,
            "type": "integer"
        },
        "per_page": {
            "name": "per_page",
            "in": "query",
            "description": "Amount of items per page",
            "required": false,
            "default": 15,
            "minimum": 1,
            "maximum": 100,
            "type": "integer"
        }
    }
}