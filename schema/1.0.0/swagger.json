{
  "swagger": "2.0",
  "info":{
    "version": "1.0.0",
    "title": "ProcessMaker API",
    "description": "An API to access ProcessMaker core functionality",
    "termsOfService": "http://processmaker.com/terms/",
    "contact": {
      "name": "ProcessMaker API team",
      "email": "oleg@processmaker.com",
      "url": "http://processmaker.com/"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/vnd.api+json"
  ],
  "produces": [
    "application/vnd.api+json"
  ],
  "security": [
    {
      "PasswordGrant": []
    },
    {
      "internalApiKey": []
    }
  ],
  "paths": {
    "/processes": {
      "get": {
        "tags": [
          "processmaker"
        ],
        "description": "Returns all Processes",
        "operationId": "findProcesses",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page Nr to fetch",
            "required": false,
            "default": 1,
            "type": "integer"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Amount of Items per Page",
            "required": false,
            "default": 15,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Processes list",
            "schema": {
              "title": "ProcessCollection",
              "description": "Json Api Response with collection of Items in array",
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Process"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/Meta"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "403": {
            "description": "Forbidden access",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "post": {
        "tags": [
          "processmaker"
        ],
        "description": "Creates a new process",
        "operationId": "addProcess",
        "parameters": [
          {
            "name": "ProcessCreateItem",
            "in": "body",
            "description": "JsonApi with the Process object to add",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Process"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created Process response",
            "schema": {
              "type": "object",
              "title": "ProcessItem",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Process"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      }
    },
    "/processes/{id}/tasks": {
      "get": {
        "tags": [
          "processmaker"
        ],
        "description": "Returns all Tasks",
        "operationId": "findTasks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Process relative to task",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Nr to fetch",
            "required": false,
            "default": 1,
            "type": "integer"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Amount of Items per Page",
            "required": false,
            "default": 15,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks list",
            "schema": {
              "title": "TaskCollection",
              "description": "Json Api Response with collection of Items in array",
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Task"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/Meta"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "post": {
        "tags": [
          "processmaker"
        ],
        "description": "Creates a new task",
        "operationId": "addTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Process relative to task",
            "required": true,
            "type": "string"
          },
          {
            "name": "TaskCreateItem",
            "in": "body",
            "description": "JsonApi with the Task object to add",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Task"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created Task response",
            "schema": {
              "type": "object",
              "title": "TaskItem",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Task"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "404": {
            "description": "Not item",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      }
    },
    "/processes/{id}": {
      "get": {
        "tags": [
          "processmaker"
        ],
        "description": "Returns the process based on a single ID",
        "operationId": "findProcessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Process to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Process Item response",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Process"
                }
              }
            }
          },
          "404": {
            "description": "Process not found",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "put": {
        "tags": [
          "processmaker"
        ],
        "description": "Update existing Process",
        "operationId": "updateProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Process to fetch",
            "required": true,
            "type": "string"
          },
          {
            "name": "ProcessUpdateItem",
            "in": "body",
            "description": "Process object to edit",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Process"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JsonApi response with updated Process object",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Process"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "processmaker"
        ],
        "description": "Deletes a single item based on the ID supplied",
        "operationId": "deleteProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of item to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Item successfully deleted",
            "schema": {
              "$ref": "#/definitions/ResultSuccess"
            }
          },
          "404": {
            "description": "Item not found",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "500": {
            "description": "Deletion error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "401": {
            "description": "Unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "processmaker"
        ],
        "description": "Returns all Groups",
        "operationId": "findGroups",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page Nr to fetch",
            "required": false,
            "default": 1,
            "type": "integer"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Amount of Items per Page",
            "required": false,
            "default": 15,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Groups list",
            "schema": {
              "title": "GroupCollection",
              "description": "Json Api Response with collection of Items in array",
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/Meta"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "post": {
        "tags": [
          "processmaker"
        ],
        "description": "Creates a new group",
        "operationId": "addGroup",
        "parameters": [
          {
            "name": "GroupCreateItem",
            "in": "body",
            "description": "JsonApi with the Group object to add",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Group"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created Group response",
            "schema": {
              "type": "object",
              "title": "GroupItem",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Group"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "tags": [
          "processmaker"
        ],
        "description": "Returns the group based on a single ID",
        "operationId": "findGroupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Group to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Group Item response",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Group"
                }
              }
            }
          },
          "404": {
            "description": "Group not found",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "put": {
        "tags": [
          "processmaker"
        ],
        "description": "Update existing Group",
        "operationId": "updateGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Group to fetch",
            "required": true,
            "type": "string"
          },
          {
            "name": "GroupUpdateItem",
            "in": "body",
            "description": "Group object to edit",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Group"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JsonApi response with updated Group object",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/Group"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "processmaker"
        ],
        "description": "Deletes a single item based on the ID supplied",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of item to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Item successfully deleted",
            "schema": {
              "$ref": "#/definitions/ResultSuccess"
            }
          },
          "404": {
            "description": "Item not found",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "500": {
            "description": "Deletion error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      }
    },
    "/groups/{id}/users": {
      "put": {
        "tags": [
          "processmaker"
        ],
        "description": "Add User(s) to Group",
        "operationId": "addUsersToGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Group to modify",
            "required": true,
            "type": "string"
          },
          {
            "name": "GroupAddUsersItem",
            "in": "body",
            "description": "JsonApi with Users ids to add",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/UserIds"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JsonApi response with result details",
            "schema": {
              "$ref": "#/definitions/ResultSuccess"
            }
          },
          "422": {
            "description": "Un-processable entity",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "500": {
            "description": "Error adding Group(s)",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "processmaker"
        ],
        "description": "Remove User(s) from Group",
        "operationId": "removeUsersFromGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Group to modify",
            "required": true,
            "type": "string"
          },
          {
            "name": "GroupRemoveUsersItem",
            "in": "body",
            "description": "JsonApi with Users ids to remove",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/UserIds"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JsonApi response with result details",
            "schema": {
              "$ref": "#/definitions/ResultSuccess"
            }
          },
          "422": {
            "description": "Un-processable entity",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "500": {
            "description": "Error adding Group(s)",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "post": {
        "tags": [
          "processmaker"
        ],
        "description": "Sync User(s) to Group",
        "operationId": "syncUsersToGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Group to modify",
            "required": true,
            "type": "string"
          },
          {
            "name": "GroupSyncUsersItem",
            "in": "body",
            "description": "JsonApi with Users ids to sync",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/UserIds"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JsonApi response with result details",
            "schema": {
              "$ref": "#/definitions/ResultSuccess"
            }
          },
          "500": {
            "description": "Error adding Group(s)",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "processmaker"
        ],
        "description": "Returns all Users",
        "operationId": "findUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page Nr to fetch",
            "required": false,
            "default": 1,
            "type": "integer"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Amount of Items per Page",
            "required": false,
            "default": 15,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Users list",
            "schema": {
              "title": "UserCollection",
              "description": "Json Api Response with collection of Items in array",
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/Meta"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "post": {
        "tags": [
          "processmaker"
        ],
        "description": "Creates a new user",
        "operationId": "addUser",
        "parameters": [
          {
            "name": "UserCreateItem",
            "in": "body",
            "description": "JsonApi with the User object to add",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created User response",
            "schema": {
              "type": "object",
              "title": "UserItem",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "processmaker"
        ],
        "description": "Returns the user based on a single ID",
        "operationId": "findUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of User to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "put": {
        "tags": [
          "processmaker"
        ],
        "description": "Update existing User",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of User to fetch",
            "required": true,
            "type": "string"
          },
          {
            "name": "UserUpdateItem",
            "in": "body",
            "description": "User object for update",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JsonApi response with updated User object",
            "schema": {
              "title": "UserUpdatedItem",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "processmaker"
        ],
        "description": "Deletes a single item based on the ID supplied",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of item to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Item successfully deleted",
            "schema": {
              "$ref": "#/definitions/ResultSuccess"
            }
          },
          "404": {
            "description": "Item not found",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "500": {
            "description": "Deletion error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/errorArray"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "PasswordGrant": {
      "type": "oauth2",
      "flow": "password",
      "tokenUrl": "/oauth/access_token"
    },
    "internalApiKey": {
      "type": "apiKey",
      "in": "query",
      "name": "access_token"
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
        },
        "type": {
          "default": "task",
          "type": "string",
          "example": "task"
        },
        "attributes": {
          "required": [
            "type",
            "process_id",
            "assign_type",
            "transfer_fly",
            "can_upload",
            "view_upload",
            "view_additional_documentation",
            "start",
            "send_last_email",
            "selfservice_timeout",
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Process_Title"
            },
            "description": {
              "type": "string",
              "example": "Some description"
            },
            "process_id": {
              "type": "string",
              "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
            },
            "type": {
              "default": "NORMAL",
              "type": "string",
              "enum": [
                "NORMAL",
                "ADHOC",
                "SUBPROCESS",
                "HIDDEN",
                "GATEWAYTOGATEWAY",
                "WEBENTRYEVENT",
                "END-MESSAGE-EVENT",
                "START-MESSAGE-EVENT",
                "INTERMEDIATE-THROW-MESSAGE-EVENT",
                "INTERMEDIATE-CATCH-MESSAGE-EVENT",
                "SCRIPT-TASK",
                "START-TIMER-EVENT",
                "INTERMEDIATE-CATCH-TIMER-EVENT",
                "END-EMAIL-EVENT",
                "INTERMEDIATE-THROW-EMAIL-EVENT"
              ]
            },
            "assign_type": {
              "default": "BALANCED",
              "type": "string",
              "enum": [
                "BALANCED",
                "MANUAL",
                "EVALUATE",
                "REPORT_TO",
                "SELF_SERVICE",
                "STATIC_MI",
                "CANCEL_MI",
                "MULTIPLE_INSTANCE",
                "MULTIPLE_INSTANCE_VALUE_BASED"
              ]
            },
            "priority_variable": {
              "type": "string"
            },
            "assign_variable": {
              "type": "string"
            },
            "group_variable": {
              "type": "string"
            },
            "mi_instance_variable": {
              "type": "string"
            },
            "mi_complete_variable": {
              "type": "string"
            },
            "transfer_fly": {
              "default": false,
              "type": "boolean"
            },
            "can_upload": {
              "default": false,
              "type": "boolean"
            },
            "view_upload": {
              "default": false,
              "type": "boolean"
            },
            "view_additional_documentation": {
              "default": false,
              "type": "boolean"
            },
            "start": {
              "default": false,
              "type": "boolean"
            },
            "send_last_email": {
              "default": true,
              "type": "boolean"
            },
            "derivation_screen_tpl": {
              "type": "string"
            },
            "selfservice_timeout": {
              "type": "integer",
              "default":0
            },
            "selfservice_time": {
              "type": "string"
            },
            "selfservice_time_unit": {
              "type": "string"
            },
            "selfservice_execution": {
              "type": "string"
            },
            "last_assigned_user_id": {
              "type": "string",
              "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
            },
            "script": {
              "type": "string"
            },
            "created_at": {
              "$ref": "#/definitions/dateTime"
            },
            "updated_at": {
              "$ref": "#/definitions/dateTime"
            }
          }
        }
      }
    },
    "Process": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
        },
        "type": {
          "default": "process",
          "type": "string",
          "example": "process"
        },
        "attributes": {
          "required": [
            "status",
            "duration_by",
            "type",
            "design_access",
            "create_user_id",
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Process_Title"
            },
            "description": {
              "type": "string",
              "example": "Some description"
            },
            "parent_process_id": {
              "type": "string",
              "example": "9d705617-cc29-482a-85ff-7f7292f72b11"
            },
            "status": {
              "default": "ACTIVE",
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "DISABLED"
              ]
            },
            "duration_by": {
              "default": "WORKING_DAYS",
              "type": "string",
              "enum": [
                "WORKING_DAYS",
                "CALENDAR_DAYS"
              ]
            },
            "type": {
              "default": "NORMAL",
              "type": "string",
              "enum": [
                "NORMAL",
                "SUB_PROCESS"
              ]
            },
            "assignment": {
              "default": false,
              "type": "boolean"
            },
            "design_access": {
              "default": "PUBLIC",
              "type": "string",
              "enum": [
                "PUBLIC",
                "PRIVATE"
              ]
            },
            "show_map": {
              "default": true,
              "type": "boolean"
            },
            "show_message": {
              "default": true,
              "type": "boolean"
            },
            "show_delegate": {
              "default": true,
              "type": "boolean"
            },
            "show_dynaform": {
              "default": false,
              "type": "boolean"
            },
            "category_id": {
              "type": "string",
              "example": "9d705617-cc29-482a-85ff-7f7292f72b22"
            },
            "sub_category_id": {
              "type": "string",
              "example": "9d705617-cc29-482a-85ff-7f7292f72b33"
            },
            "create_user_id":{
              "type": "string",
              "example": "9d705617-cc29-482a-85ff-7f7292f72b44"
            },
            "debug": {
              "type":"boolean",
              "default": false
            },
            "dynaform_summary_id": {
              "type": "string",
              "example": "9d705617-cc29-482a-85ff-7f7292f72b55"
            },
            "created_at": {
              "$ref": "#/definitions/dateTime"
            },
            "updated_at": {
              "$ref": "#/definitions/dateTime"
            }
          }
        }
      }
    },
    "Group": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
        },
        "type": {
          "default": "group",
          "type": "string",
          "example": "group"
        },
        "attributes": {
          "required": [
            "code",
            "title"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "example": "GROUP_ADMIN"
            },
            "title": {
              "type": "string",
              "example": "Group_Title"
            },
            "description": {
              "type": "string",
              "example": "Some description"
            },
            "status": {
              "default": "ACTIVE",
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "example": "ACTIVE"
            },
            "users": {
              "type": "array",
              "description": "User Ids array",
              "items": {
                "type": "string",
                "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
              }
            },
            "created_at": {
              "$ref": "#/definitions/dateTime"
            },
            "updated_at": {
              "$ref": "#/definitions/dateTime"
            }
          }
        }
      }
    },
    "UserIds": {
      "type": "object",
      "required": [
        "users"
      ],
      "properties": {
        "users": {
          "type": "array",
          "description": "User Ids array",
          "items": {
            "type": "string",
            "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
          }
        }
      }
    },
    "ResultSuccess": {
      "type": "object",
      "required": [
        "meta"
      ],
      "properties": {
        "meta": {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "example": "1234",
              "description": "Result code from ApiCodes dictionary"
            },
            "title": {
              "type": "string",
              "example": "Some positive result description",
              "description": "Result textual explanation"
            }
          }
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "9d705617-cc29-482a-85ff-7f7292f72b31"
        },
        "type": {
          "default": "user",
          "type": "string",
          "example": "user"
        },
        "attributes": {
          "required": [
            "username",
            "password",
            "email"
          ],
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "example": "user_name"
            },
            "password": {
              "type": "string",
              "example": "some_password"
            },
            "firstname": {
              "type": "string",
              "example": "First_name"
            },
            "lastname": {
              "type": "string",
              "example": "Last_name"
            },
            "email": {
              "type": "string",
              "example": "example@example.com"
            },
            "expire_date": {
              "$ref": "#/definitions/dateTime"
            },
            "status": {
              "default": "ACTIVE",
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "VACATION",
                "CLOSED"
              ],
              "example": "ACTIVE"
            },
            "country": {
              "type": "string",
              "example": "USA"
            },
            "city": {
              "type": "string",
              "example": "Washington"
            },
            "location": {
              "type": "string",
              "example": "Location"
            },
            "address": {
              "type": "string",
              "example": "USA"
            },
            "phone": {
              "type": "string",
              "example": "+1(99)999-99-99"
            },
            "fax": {
              "type": "string",
              "example": "+1(99)999-99-99"
            },
            "cellular": {
              "type": "string",
              "example": "+1(99)999-99-99"
            },
            "zip_code": {
              "type": "string"
            },
            "position": {
              "type": "string"
            },
            "resume": {
              "type": "string"
            },
            "birthday": {
              "type": "string"
            },
            "bookmark_start_cases": {
              "type": "string"
            },
            "time_zone": {
              "type": "string"
            },
            "default_lang": {
              "type": "string",
              "default": "en_US"
            },
            "created_at": {
              "$ref": "#/definitions/dateTime"
            },
            "updated_at": {
              "$ref": "#/definitions/dateTime"
            }
          }
        }
      }
    },
    "dateTime": {
      "type": "object",
      "required": [
        "date"
      ],
      "properties": {
        "date": {
          "type": "string",
          "example": "2016-08-23 18:11:05.000000"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "required": [
        "total",
        "count",
        "per_page",
        "current_page",
        "total_pages",
        "links"
      ],
      "properties": {
        "total": {
          "type": "integer",
          "example": 125
        },
        "count": {
          "type": "integer",
          "example": 25
        },
        "per_page": {
          "type": "integer",
          "example": 25
        },
        "current_page": {
          "type": "integer",
          "example": 2
        },
        "total_pages": {
          "type": "integer",
          "example": 30
        },
        "links": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "example": "http://localhost/api/v1/groups?page=3"
            },
            "previous": {
              "type": "string",
              "example": "http://localhost/api/v1/groups?page=1"
            }
          }
        }
      }
    },
    "Meta": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "errorArray": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        }
      }
    }
  }
}